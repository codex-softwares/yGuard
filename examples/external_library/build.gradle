plugins {
  id 'application'
}

application {
  mainClassName = 'com.yworks.example.HelloWorld'
}

compileJava {
  sourceCompatibility '1.7'
  targetCompatibility '1.7'
}

jar {
  manifest {
    attributes(
      'Main-Class': application.mainClassName,
      'Class-Path': './gson-2.8.9.jar'
    )
  }
}

repositories {
  mavenCentral()
}

configurations {
  gson
  yguard
}

dependencies {
  yguard 'com.yworks:yguard:4.1.1'
  gson 'com.google.code.gson:gson:2.8.9'
  implementation configurations.gson.dependencies
}

task obfuscate   {
  dependsOn jar
  group 'yGuard'
  description 'Obfuscates the java archive.'

  doLast {
    def archivePath = jar.archiveFile.get().asFile.path
    def unobfJar = archivePath.replace(".jar", "_unobf.jar")

    ant.move(file: archivePath, tofile: unobfJar, verbose: true)

    ant.taskdef(
      name: 'yguard',
      classname: 'com.yworks.yguard.YGuardTask',
      classpath: configurations.yguard.asPath
    )
    ant.yguard {
      inoutpair(in: unobfJar, out: archivePath)

      externalclasses {
        pathelement(location: configurations.gson.asPath)
      }

      rename(logfile: "${buildDir}/${rootProject.name}_renamelog.xml") {
        keep {
          'method'(name: 'void main(java.lang.String[])', class: application.mainClassName)
        }
      }
    }
  }
}

distTar.dependsOn obfuscate
distZip.dependsOn obfuscate
