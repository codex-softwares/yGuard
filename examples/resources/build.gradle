plugins {
  id 'application'
}

application {
  mainClassName = 'com.yworks.example.HelloWorld'
}

jar {
  manifest {
    attributes(
      'Main-Class': application.mainClassName
    )
  }
}

repositories {
  mavenCentral()
}

configurations {
  yguard
}

dependencies {
  yguard 'com.yworks:yguard:4.1.0'
}

task obfuscate {
  dependsOn jar
  group 'yGuard'
  description 'Obfuscates the java archive.'

  doLast {
    def archivePath = jar.archiveFile.get().asFile.path
    def unobfJar = archivePath.replace(".jar", "_unobf.jar")

    ant.move(file: archivePath, tofile: unobfJar, verbose: true)

    ant.taskdef(
      name: 'yguard',
      classname: 'com.yworks.yguard.YGuardTask',
      classpath: configurations.yguard.asPath
    )

    ant.yguard {
      inoutpair(in: unobfJar, out: archivePath)
      rename(logfile: "${buildDir}/${rootProject.name}_renamelog.xml") {
        adjust(replacePath: false) {
          // keep the complete path to the resources even if
          // package com.yworks.example gets obfuscated by name
          include(name: "com/yworks/example/resources/*")
        }
        adjust(replaceContent: true, replaceContentSeparator: ".", replaceName: true) {
          // plain-text class names in the config files will
          // be replaced with the obfuscated name versions
          // replace the .properties files' names with the obfuscated
          // versions if the corresponding .class files get obfuscated
          include(name: "**/*.properties")
        }
        keep {
          method(name: "void main(java.lang.String[])", "class": application.mainClassName)
        }
      }
    }
  }
}

distTar.dependsOn obfuscate
distZip.dependsOn obfuscate
